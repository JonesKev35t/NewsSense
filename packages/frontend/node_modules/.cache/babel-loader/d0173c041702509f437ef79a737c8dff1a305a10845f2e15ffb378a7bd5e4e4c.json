{"ast":null,"code":"var _jsxFileName = \"/Users/kevinjones/Desktop/NewsSense/newssense/packages/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [serverStatus, setServerStatus] = useState('checking...');\n  useEffect(() => {\n    const checkServer = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/health');\n        const data = await response.json();\n        setServerStatus(data.status);\n      } catch (error) {\n        setServerStatus('error');\n        console.error('Error checking server status:', error);\n      }\n    };\n    checkServer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: '0 auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#333',\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: \"NewsSense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#666',\n        textAlign: 'center',\n        fontSize: '18px'\n      },\n      children: [\"Server Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: serverStatus === 'ok' ? 'green' : 'red',\n          fontWeight: 'bold'\n        },\n        children: serverStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4o2FyOUqO9SYomVNR3Ry/LfbI+8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","serverStatus","setServerStatus","checkServer","response","fetch","data","json","status","error","console","style","padding","maxWidth","margin","fontFamily","children","color","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/kevinjones/Desktop/NewsSense/newssense/packages/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [serverStatus, setServerStatus] = useState('checking...');\n\n  useEffect(() => {\n    const checkServer = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/health');\n        const data = await response.json();\n        setServerStatus(data.status);\n      } catch (error) {\n        setServerStatus('error');\n        console.error('Error checking server status:', error);\n      }\n    };\n\n    checkServer();\n  }, []);\n\n  return (\n    <div style={{ \n      padding: '20px', \n      maxWidth: '800px', \n      margin: '0 auto',\n      fontFamily: 'Arial, sans-serif'\n    }}>\n      <h1 style={{ \n        color: '#333',\n        textAlign: 'center',\n        marginBottom: '20px'\n      }}>\n        NewsSense\n      </h1>\n      <p style={{ \n        color: '#666',\n        textAlign: 'center',\n        fontSize: '18px'\n      }}>\n        Server Status: <span style={{ \n          color: serverStatus === 'ok' ? 'green' : 'red',\n          fontWeight: 'bold'\n        }}>\n          {serverStatus}\n        </span>\n      </p>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,aAAa,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,eAAe,CAACI,IAAI,CAACE,MAAM,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdP,eAAe,CAAC,OAAO,CAAC;QACxBQ,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,gBACAlB,OAAA;MAAIa,KAAK,EAAE;QACTM,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,QAAQ;QACnBC,YAAY,EAAE;MAChB,CAAE;MAAAH,QAAA,EAAC;IAEH;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLzB,OAAA;MAAGa,KAAK,EAAE;QACRM,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,QAAQ;QACnBM,QAAQ,EAAE;MACZ,CAAE;MAAAR,QAAA,GAAC,iBACc,eAAAlB,OAAA;QAAMa,KAAK,EAAE;UAC1BM,KAAK,EAAEhB,YAAY,KAAK,IAAI,GAAG,OAAO,GAAG,KAAK;UAC9CwB,UAAU,EAAE;QACd,CAAE;QAAAT,QAAA,EACCf;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACvB,EAAA,CA9CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}